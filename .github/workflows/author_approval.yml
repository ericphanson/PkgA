name: Author Approval Label
on:
  issue_comment:
    types: [created]

jobs:
  label:
    permissions:
        pull-requests: write
        # Workaround:
        # https://github.com/cli/cli/discussions/5307#discussioncomment-2358577
        repository-projects: read
    runs-on: ubuntu-latest
    # Run on comments that are:
    # 1) on PRs, not issues,
    # 2) not from bot users and,
    # 3) include the string "approved"
    # If so, we will do the work to check that the commenter is the package author,
    # and conditionally apply the author-approved label.
    if: ${{ github.event.issue.pull_request && github.event.issue.user.type != 'Bot' && contains(github.event.comment.body, 'approved') }}
    steps:
      - name: Verify package author
        id: verify-author
        env:
          # We use an env variable, not direct interpolation into the script, for security:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          PR_BODY: ${{ github.event.issue.body }}
          COMMENTER: ${{ github.event.comment.user.login }}
        shell: julia --compile=min --optimize=0 --color=yes {0}
        run: |
          m = match(r"Created by: @([^\s]+)", ENV["PR_BODY"])
          verified = !isnothing(m) && m[1] == ENV["COMMENTER"]
          open(ENV["GITHUB_OUTPUT"], "a") do io
            println(io, "verified=$verified")
          end
      - name: Add label
        if: ${{ steps.verify-author.outputs.verified == 'true' }}
        env:
          PR_NUM: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: gh pr edit "$PR_NUM" --add-label "author-approved"
